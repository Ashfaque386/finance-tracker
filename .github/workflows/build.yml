name: Build Android APK

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          autoconf \
          automake \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev \
          ccache \
          libltdl-dev \
          wget \
          curl
    
    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install buildozer==1.5.0
        pip install cython==0.29.36
    
    - name: Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: |
          .buildozer
          ~/.buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}-v2
        restore-keys: |
          buildozer-
    
    - name: Set up environment variables
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_NDK" >> $GITHUB_ENV
    
    - name: Accept Android SDK licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
    
    - name: Build APK with Buildozer
      run: |
        buildozer android debug
      env:
        USE_SDK_WRAPPER: 1
        ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
        ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/27.3.13750724
    
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: MoneyManager-APK
        path: bin/*.apk
        retention-days: 30
    
    - name: Get APK filename
      id: apk_name
      run: |
        APK_FILE=$(ls bin/*.apk | head -n 1)
        echo "apk_file=${APK_FILE}" >> $GITHUB_OUTPUT
        echo "Built APK: ${APK_FILE}"
    
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

